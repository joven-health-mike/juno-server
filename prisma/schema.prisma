generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String         @id @default(uuid())
  email                       String?        @unique
  username                    String         @unique
  phone                       String?        @unique
  firstName                   String
  lastName                    String
  docsUrl                     String?
  counselorRoomLink           String?
  schoolAdminAssignedSchoolId String?
  schoolStaffAssignedSchoolId String?
  studentAssignedCounselorId  String?
  studentAssignedSchoolId     String?
  studentStatus               StudentStatus?
  timeZoneIanaName            String?        @default("America/Denver")
  role                        Role
  counselorAppointments       Appointment[]
  schoolAdminAssignedSchool   School?        @relation("SchoolAdminSchool", fields: [schoolAdminAssignedSchoolId], references: [id])
  schoolStaffAssignedSchool   School?        @relation("SchoolStaffSchool", fields: [schoolStaffAssignedSchoolId], references: [id])
  studentAssignedCounselor    User?          @relation("CounselorStudents", fields: [studentAssignedCounselorId], references: [id])
  counselorAssignedStudents   User[]         @relation("CounselorStudents")
  studentAssignedSchool       School?        @relation(fields: [studentAssignedSchoolId], references: [id])
  counselorAssignedSchools    School[]       @relation("CounselorSchools")
  studentGuardians            User[]         @relation("GuardianStudents")
  guardianStudents            User[]         @relation("GuardianStudents")
  participantAppointments     Appointment[]  @relation("ParticipantAppointment")
}

model School {
  id           String        @id @default(uuid())
  name         String
  address      String?
  state        String?
  city         String?
  zip          String?
  primaryEmail String?
  primaryPhone String?
  docsUrl      String?
  appointments Appointment[]
  admins       User[]        @relation("SchoolAdminSchool")
  staff        User[]        @relation("SchoolStaffSchool")
  students     User[]
  counselors   User[]        @relation("CounselorSchools")
}

model Appointment {
  id              String               @id @default(uuid())
  title           String
  start           DateTime
  end             DateTime
  isRecurring     Boolean?             @default(false)
  numOccurrences  Int?
  numRepeats      Int?
  frequency       RepeatFrequency?
  type            AppointmentType
  status          AppointmentStatus
  location        AppointmentLocation?
  counselorUserId String?
  schoolId        String?
  counselor       User?                @relation(fields: [counselorUserId], references: [id])
  school          School?              @relation(fields: [schoolId], references: [id])
  participants    User[]               @relation("ParticipantAppointment")
}

enum RepeatFrequency {
  DAYS
  WEEKS
  MONTHS
  YEARS
}

enum Role {
  JOVEN_ADMIN
  JOVEN_STAFF
  SCHOOL_ADMIN
  SCHOOL_STAFF
  STUDENT
  GUARDIAN
  COUNSELOR
  SYSADMIN
}

enum StudentStatus {
  ACTIVE
  DISCHARGED
  DELETED
}

enum AppointmentType {
  CLINICAL
  CONSULTATION
  EVALUATION
}

enum AppointmentStatus {
  SCHEDULED
  CANCELLED
  ONGOING
  FINISHED
  DELETED
}

enum AppointmentLocation {
  VIRTUAL_SCHOOL
  VIRTUAL_HOME
  IN_PERSON
  UNKNOWN
}
