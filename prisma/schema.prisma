// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String? @unique
  username String  @unique
  phone    String? @unique

  firstName String
  lastName  String

  docsUrl String?

  counselorRoomLink String?
  counselorAssignedStudents User[] @relation(name: "CounselorStudents", map: "counselor_students")
  counselorAppointments     Appointment[] @relation(name: "CounselorAppointments")
  counselorAssignedSchools  School[] @relation(name: "CounselorSchools")

  schoolAdminAssignedSchool   School? @relation(name: "SchoolAdminSchool")
  schoolStaffAssignedSchool   School? @relation(name: "SchoolStaffSchool")

  guardianStudents User[] @relation(name: "GuardianStudents", map: "guardian_students")

  studentAssignedSchool      School?
  studentAssignedCounselor   User? @relation(name: "StudentCounselor")
  studentGuardians           User[] @relation(name: "GuardianStudents", map: "student_guardians")
  studentStatus              StudentStatus?

  timeZoneIanaName String? @default("America/Denver")

  role Role

  participantAppointments Appointment[] @relation(name: "ParticipantAppointment")
}

model School {
  id           String               @id @default(uuid())
  name         String
  address      String?
  state        String?
  city         String?
  zip          String?
  primaryEmail String?
  primaryPhone String?
  schoolAdmins User[] @relation(name: "SchoolAdminSchool", map: "school_admin_school")
  schoolStaff  User[] @relation(name: "SchoolStaffSchool", map: "school_staff_school")
  students     User[] @relation(name: "SchoolAppointments", map: "school_appointments")
  counselors   User[] @relation(name: "CounselorSchools", map: "counselor_schools")
  appointments Appointment[]
}

model Appointment {
  id             String               @id @default(uuid())
  title          String
  start          DateTime
  end            DateTime
  isRecurring    Boolean?             @default(false)
  numOccurrences Int?
  numRepeats     Int?
  frequency      RepeatFrequency?
  school         School? @relation(name: "SchoolAppointments")
  counselor      User @relation(name: "CounselorAppointments")
  participants   User[]               @relation(name: "ParticipantAppointment")
  type           AppointmentType
  status         AppointmentStatus
  location       AppointmentLocation?
}

enum RepeatFrequency {
  DAYS
  WEEKS
  MONTHS
  YEARS
}

enum Role {
  JOVEN_ADMIN // Internal administration
  JOVEN_STAFF
  SCHOOL_ADMIN
  SCHOOL_STAFF // Staff 
  STUDENT
  GUARDIAN // Parents or guardians at home who can:
  // - log the student in
  // - see the student's records and information
  COUNSELOR
  SYSADMIN
}

enum StudentStatus {
  ACTIVE
  DISCHARGED
  DELETED
}

enum AppointmentType {
  CLINICAL
  CONSULTATION
  EVALUATION
}

enum AppointmentStatus {
  SCHEDULED
  CANCELLED
  ONGOING
  FINISHED
  DELETED
}

enum AppointmentLocation {
  VIRTUAL_SCHOOL
  VIRTUAL_HOME
  IN_PERSON
  UNKNOWN
}
